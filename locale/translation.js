// Translation document for the collection
// =======================================
// This file contains the texts
// annotated for translation
//
// Instructions:
// 1. Open the PO file with Poedit
// 2. Press "Update" to update from sources

gettext('Copy');
gettext('Join');
gettext('Reversal');
gettext('Shift');
gettext('Sign');
gettext('Split');
gettext('Uint');
gettext('Wires');
gettext('Blocks');
gettext('Copy-20');
gettext('Copy-02');
gettext('Copy-2: Copy the input wire twice and generate a 2 bits Bus output (Verilog implementation)');
gettext('Copy-03');
gettext('Copy-3: Copy the input wire twice and generate a 3 bits Bus output (Verilog implementation)');
gettext('Copy-04');
gettext('Copy-4: Copy the input wire twice and generate a 4 bits Bus output (Verilog implementation)');
gettext('Copy-05');
gettext('Copy-5: Copy the input wire twice and generate a 5 bits Bus output (Verilog implementation)');
gettext('Copy-06');
gettext('Copy-6: Copy the input wire twice and generate a 6 bits Bus output (Verilog implementation)');
gettext('Copy-07');
gettext('Copy-7: Copy the input wire twice and generate a 7 bits Bus output (Verilog implementation)');
gettext('Copy-08');
gettext('Copy-8: Copy the input wire twice and generate a 8 bits Bus output (Verilog implementation)');
gettext('Copy-09');
gettext('Copy-9: Copy the input wire twice and generate a 9 bits Bus output (Verilog implementation)');
gettext('Copy-10');
gettext('Copy-10: Copy the input wire twice and generate a 10 bits Bus output (Verilog implementation)');
gettext('Copy-11');
gettext('Copy-11: Copy the input wire twice and generate a 11 bits Bus output (Verilog implementation)');
gettext('Copy-12');
gettext('Copy-12: Copy the input wire twice and generate a 12 bits Bus output (Verilog implementation)');
gettext('Copy-24');
gettext('Copy-24: Copy the input wire twice and generate a 24 bits Bus output (Verilog implementation)');
gettext('Copy-28');
gettext('Copy-28: Copy the input wire twice and generate a 28 bits Bus output (Verilog implementation)');
gettext('Copy-32');
gettext('Copy-32: Copy the input wire twice and generate a 32 bits Bus output (Verilog implementation)');
gettext('Copy-02');
gettext('Copy-2: Copy the input wire twice and generate a 2 bits Bus output');
gettext('Bus2-Join-all: Joint two wires into a 2-bits Bus');
gettext('Copy-03');
gettext('Copy-3: Copy the input wire and creates a 3 bits Bus output');
gettext('Bus3-Join-all: Joint three wires into a 3-bits Bus');
gettext('Copy-04');
gettext('Copy-4: Copy the input wire and creates a 4 bits Bus output');
gettext('Bus4-Join-all: Join all the wires into a 4-bits Bus');
gettext('Copy-05');
gettext('Copy-5: Copy the input wire and creates a 5 bits Bus output');
gettext('Bus5-Join-all: Join all the wires into a 5-bits Bus');
gettext('Copy-06');
gettext('Copy-6: Copy the input wire and creates a 6 bits Bus output');
gettext('Bus6-Join-all: Join all the wires into a 6-bits Bus');
gettext('Copy-07');
gettext('Copy-7: Copy the input wire and creates a 7 bits Bus output');
gettext('Bus7-Join-all: Join all the wires into a 7-bits Bus');
gettext('Copy-08');
gettext('Copy-8: Copy the input wire and creates a 8 bits Bus output');
gettext('Bus8-Join-all: Join all the wires into a 8-bits Bus');
gettext('Copy-09');
gettext('Copy-9: Copy the input wire and creates a 9 bits Bus output');
gettext('Bus8-Join-1-8: Join the two buses into an 9-bits Bus');
gettext('Copy-12');
gettext('Copy-12: Copy the input wire and creates a 12 bits Bus output');
gettext('Bus12-Join-4-8: Join the two buses into an 12-bits Bus');
gettext('Alhambra-II');
gettext('Copy-20');
gettext('Copy-20: Copy the input wire twice and generate a 20 bits Bus output (Verilog implementation)');
gettext('Bus-02');
gettext('Bus-03');
gettext('Bus-04');
gettext('Bus-05');
gettext('Bus-06');
gettext('Bus-07');
gettext('Bus-08');
gettext('Bus-09');
gettext('Bus-10');
gettext('Bus-11');
gettext('Bus-12');
gettext('Bus-15');
gettext('Bus-16');
gettext('Bus-19');
gettext('Bus-20');
gettext('Bus-21');
gettext('Bus-22');
gettext('Bus-23');
gettext('Bus-24');
gettext('Bus-27');
gettext('Bus-28');
gettext('Bus-31');
gettext('Bus-32');
gettext('Bus-64');
gettext('Join-all');
gettext('Join-1-2');
gettext('Bus3-Join-1-2: Join two buses of 2 and 1 bits into a 3-bits Bus');
gettext('Join-2-1');
gettext('Bus3-Join-2-1: Joint two buses of 1 and 2 bits into a 3-bits Bus');
gettext('Join-all');
gettext('Join-1-3');
gettext('Bus4-Join-1-3: Join the two buses into a 4-bits Bus');
gettext('Join-3-1');
gettext('Bus4-Join-3-1: Join the two buses into a 4-bits Bus');
gettext('Join-all');
gettext('Join-half');
gettext('Bus4-Join-half: Join the two buses into a 4-bits Bus');
gettext('Join-1-4');
gettext('Bus5-Join-1-4: Join the two buses of 1 and 4 bits into a 5-bits Bus');
gettext('Join-2-3');
gettext('Bus5-Join-2-3: Join the two buses of 2 and 3 bits into a 5-bits Bus');
gettext('Join-3-2');
gettext('Bus5-Join-3-2: Join the two buses of 3 and 2 bits into a 5-bits Bus');
gettext('Join-4-1');
gettext('Bus5-Join-4-1: Join the two buses of 4 and 1 bits into a 5-bits Bus');
gettext('Join-all');
gettext('Join-1-5');
gettext('Bus6-Join-1-5: Join the two buses into a 6-bits Bus');
gettext('Join-2-4');
gettext('Bus6-Join-2-4: Join all the two buses into a 6-bits Bus');
gettext('Join-4-2');
gettext('Bus6-Join-4-2: Join the two buses into a 6-bits Bus');
gettext('Join-5-1');
gettext('Bus6-Join-5-1: Join the two buses into a 6-bits Bus');
gettext('Join-all');
gettext('Join-half');
gettext('Bus6-Join-half: Join the two buses into a 6-bits Bus');
gettext('Join-1-6');
gettext('Bus7-Join-1-4: Join the two buses into a 7-bits Bus');
gettext('Join-2-5');
gettext('Bus7-Join-2-5: Join the two buses into a 7-bits Bus');
gettext('Join-3-4');
gettext('Bus7-Join-3-4: Join the two buses into a 7-bits Bus');
gettext('Join-4-3');
gettext('Bus7-Join-4-3: Join the two buses into a 7-bits Bus');
gettext('Join-5-2');
gettext('Bus7-Join-5-2: Join the two buses into a 7-bits Bus');
gettext('Join-6-1');
gettext('Bus7-Join-6-1: Join the two buses into a 7-bits Bus');
gettext('Join-all');
gettext('Join-1-7');
gettext('Bus7-Join-1-7: Join the two buses into an 8-bits Bus');
gettext('Join-2-6');
gettext('Bus8-Join-2-6: Join the two buses into an 8-bits Bus');
gettext('Join-3-5');
gettext('Bus8-Join-3-5: Join the two buses into an 8-bits Bus');
gettext('Join-5-3');
gettext('Bus8-Join-5-3: Join the two buses into an 8-bits Bus');
gettext('Join-6-2');
gettext('Bus8-Join-6-2: Join the two buses into an 8-bits Bus');
gettext('Join-7-1');
gettext('Bus7-Join-7-1: Join the two buses into an 8-bits Bus');
gettext('Join-all');
gettext('Join-half');
gettext('Bus8-Join-half: Join the two same halves into an 8-bits Bus');
gettext('Join-quarter');
gettext('Bus8-Join-quarter: Join the four quarters into an 8-bits Bus');
gettext('Join-1-8');
gettext('Join-8-1');
gettext('Bus8-Join-8-1: Join the two buses into an 9-bits Bus');
gettext('Join-8-2');
gettext('Bus10-Join-2-8: Join the two buses into an 10-bits Bus');
gettext('Join-3-8');
gettext('Bus11-Join-3-8: Join the two buses into an 11-bits Bus');
gettext('Join-1-11');
gettext('Bus12-Join-1-11: Join the two buses into an 12-bits Bus');
gettext('Join-4-8');
gettext('Join-one-fourth');
gettext('Bus12-Join-one-fourth: Join the four buses into an 12-bits Bus');
gettext('Join-one-third');
gettext('Bus12-Join-one-third: Join the three buses into an 12-bits Bus');
gettext('Join-5-10');
gettext('Bus15-Join-5-10: Join the two buses into a 15-bits Bus');
gettext('Join-7-8');
gettext('Bus15-Join-7-8: Join the two buses into a 15-bits Bus');
gettext('Join-01-15');
gettext('Bus16-Join-1-15: Join the two buses into a 16-bits Bus');
gettext('Join-02-14');
gettext('Bus16-Join-2-14: Join the two buses into a 16-bits Bus');
gettext('Join-03-13');
gettext('Bus16-Join-3-13: Join the two same halves into an 16-bits Bus');
gettext('Join-04-12');
gettext('Bus16-Join-4-12: Join the two same halves into an 16-bits Bus');
gettext('Join-05-11');
gettext('Bus16-Join-5-11: Join the two same halves into an 16-bits Bus');
gettext('Join-06-10');
gettext('Bus16-Join-6-10: Join the two same halves into an 16-bits Bus');
gettext('Join-07-9');
gettext('Bus16-Join-7-9: Join the two same halves into an 16-bits Bus');
gettext('Join-14-02');
gettext('Bus16-Join-14-2: Join the two buses into a 16-bits Bus');
gettext('Join-15-01');
gettext('Bus16-Join-15-1: Join the two buses into a 16-bits Bus');
gettext('Join-half');
gettext('Bus16-Join-half: Join the two same halves into an 16-bits Bus');
gettext('Join-quarter');
gettext('Bus16-Join-quarter: Join the four same buses into an 16-bits Bus');
gettext('Join-3-8-8');
gettext('Bus19-Join-3-8-8: Join the three buses into a 19-bits Bus');
gettext('Join-1-19');
gettext('Bus20-Join-half: Join the two buses into an 20-bits Bus');
gettext('Join-4-16');
gettext('Join-4-8-8');
gettext('Bus20-Join-4-8-8: Join the three buses into an 20-bits Bus');
gettext('Join-11-21');
gettext('Bus32-Join-11-21: Join the two buses into an 32-bits Bus');
gettext('Join-10-22');
gettext('Bus32-Join-10-22: Join the two buses into an 32-bits Bus');
gettext('Join-7-8-8');
gettext('Bus23-Join-7-8-8: Join the three buses into a 23-bits Bus');
gettext('Join-8-16');
gettext('Bus24-Join-8-16: Join the two buses into an 24-bits Bus');
gettext('Join-half');
gettext('Bus24-Join-half: Join the two buses into an 24-bits Bus');
gettext('Join-one-third');
gettext('Bus24-Join-one-third: Join the three buses into an 24-bits Bus');
gettext('Join-3-8-8-8');
gettext('Bus27-Join-3-8-8-8: Join the four buses into a 27-bits Bus');
gettext('Join-4-24');
gettext('Bus28-Join-4-24: Join the two buses into an 28-bits Bus');
gettext('Join-4-8-8-8');
gettext('Bus28-Join-4-8-8-8: Join the four buses into an 28-bits Bus');
gettext('Join-7-8-8-8');
gettext('Bus31-Join-7-8-8-8: Join the four buses into a 31-bits Bus');
gettext('Join-01-31');
gettext('Bus32-Join-1-31: Join the two buses into an 32-bits Bus');
gettext('Join-02-30');
gettext('Bus32-Join-2-30: Join the two buses into an 32-bits Bus');
gettext('Join-03-29');
gettext('Bus32-Join-3-29: Join the two buses into an 32-bits Bus');
gettext('Join-04-28');
gettext('Bus32-Join-4-28: Join the two buses into an 32-bits Bus');
gettext('Join-05-27');
gettext('Bus32-Join-5-27: Join the two buses into an 32-bits Bus');
gettext('Join-06-26');
gettext('Bus32-Join-6-26: Join the two buses into an 32-bits Bus');
gettext('Join-07-25');
gettext('Bus32-Join-7-25: Join the two buses into an 32-bits Bus');
gettext('Join-08-24');
gettext('Bus32-Join-8-24: Join the two buses into an 32-bits Bus');
gettext('Join-09-23');
gettext('Bus32-Join-9-23: Join the two buses into an 32-bits Bus');
gettext('Join-10-22');
gettext('Join-11-21');
gettext('Join-12-20');
gettext('Bus32-Join-12-20: Join the two buses into an 32-bits Bus');
gettext('Join-13-19');
gettext('Bus32-Join-13-19: Join the two buses into an 32-bits Bus');
gettext('Join-14-18');
gettext('Bus32-Join-14-18: Join the two buses into an 32-bits Bus');
gettext('Join-15-17');
gettext('Bus32-Join-15-17: Join the two buses into an 32-bits Bus');
gettext('Join-17-15');
gettext('Bus32-Join-17-15: Join the two buses into an 32-bits Bus');
gettext('Join-29-3');
gettext('Bus32-Join-29-3: Join the two buses into an 32-bits Bus');
gettext('Join-30-2');
gettext('Bus32-Join-30-2: Join the two buses into an 32-bits Bus');
gettext('Join-31-1');
gettext('Bus32-Join-31-1: Join the two buses into an 32-bits Bus');
gettext('Join-half');
gettext('Bus32-Join-half: Join the two buses into an 32-bits Bus');
gettext('Join-quarter');
gettext('Bus32-Join-quarter: Join the four buses into an 32-bits Bus');
gettext('Join-half');
gettext('Bus64-Join-half: Join the two buses into an 64-bits Bus');
gettext('Reversal-02');
gettext('Reversal-2: 2-bit Bus reversal');
gettext('Bus2-Split-all: Split the 2-bits bus into two wires');
gettext('Reversal-03');
gettext('Reversal-3: 3-bit Bus reversal');
gettext('Bus3-Split-all: Split the 3-bits bus into three wires');
gettext('Reversal-04');
gettext('Reversal-4: 4-bit Bus reversal');
gettext('Bus4-Split-all: Split the 4-bits bus into its wires');
gettext('Bus-02');
gettext('Bus-03');
gettext('Bus-04');
gettext('Bus-08');
gettext('Bus-16');
gettext('Bus-32');
gettext('Shift-Left');
gettext('Shift-Right');
gettext('SL1-int2');
gettext('SL1-int2: Shift  a 2-bit value one bit left. LSB is 0. The sign is kept');
gettext('Constant bit 0');
gettext('SL1: Shift  a 2-bit value one bit left. LSB is filled with 'in' and the MSB is written to out ');
gettext('Sign-int2: Get the sign of a 2-bits Intenger');
gettext('Sign bit is kept');
gettext('Get the sign  ');
gettext('SL1-uint2');
gettext('SL1-uint2: Shift  a 2-bit value one bit left. LSB is 0. The sign is lost');
gettext('Sign bit is lost');
gettext('SL1');
gettext('SR1-int2');
gettext('SR1-int2: Shift  a 2-bit value one bit right. MSB is keep (the sign)');
gettext('SR1: Shift  a 2-bit value one bit right. MSB is filled with ');
gettext('Get the sign  \nand place it as the MSB');
gettext('SR1-uint2');
gettext('SR1-uint2: Shift  a 2-bit value one bit right. MSB is filled with 0 (no sign used)');
gettext('The MSB is 0 (no sight)');
gettext('This bit is ignored');
gettext('SR1');
gettext('SR1: Shift  a 2-bit value one bit right. MSB is filled with in');
gettext('Shift-Left');
gettext('Shift-Right');
gettext('SL1');
gettext('SL1: Shift  a 3-bit value one bit left. LSB is filled with 'in' and the MSB is written to out ');
gettext('Bus3-Split-1-2: Split the 3-bits bus into two: 1-bit and 2-bits buses');
gettext('SR1-uint3');
gettext('SR1-uint3: Shift  a 3-bit value one bit right. MSB is filled with 0 (no sign used)');
gettext('SR1');
gettext('SR1: Shift  a 3-bit value one bit right. MSB is filled with ');
gettext('Bus3-Split-2-1: Split the 3-bits bus into two: 2-bit and 1-bits buses');
gettext('Shift-left');
gettext('Shift-right');
gettext('SL1');
gettext('SL1: Shift  a 4-bit value one bit left. LSB is filled with 'in' and the MSB is written to out ');
gettext('Bus5-Split-1-4: Split the 5-bits bus into two buses of 1 and 4 bits');
gettext('SR1-uint4');
gettext('SR1-uint4: Shift  a 4-bit value one bit right. MSB is filled with 0 (no sign used)');
gettext('SR1');
gettext('SR1: Shift  a 4-bit value one bit right. MSB is filled with ');
gettext('Bus4-Split-3-1: Split the 4-bits bus into two: 3-bits and 1-bits buses');
gettext('Shift-left');
gettext('Shift-right');
gettext('SL1');
gettext('SL1: Shift  a 8-bit value one bit left. LSB is filled with 'in' and the MSB is written to out ');
gettext('Bus9-Split-half: Split the 9-bits bus into two buses of 1 and 8 wires');
gettext('SR1');
gettext('SR1: Shift  a 8-bit value one bit right. MSB is filled with ');
gettext('Bus8-Split-7-1: Split the 8-bits bus into two buses of 7 and 1 wires');
gettext('Shift-left');
gettext('Shift-right');
gettext('SL1');
gettext('SL1: Shift  a 16-bit value one bit left. LSB is filled with 'in' and the MSB is written to out ');
gettext('Bus16-Split-half: Split the 16-bits bus into two buses of 1 and 11 wires');
gettext('SR1');
gettext('SR1: Shift  a 16-bit value one bit right. MSB is filled with ');
gettext('Bus16-Split-half: Split the 16-bits bus into two buses of 1 and 15 wires');
gettext('Shift-Right');
gettext('Shift-left');
gettext('SR1');
gettext('SR1-32bits: Shift  a 32-bit value one bit right. MSB is filled with the input  in');
gettext('Bus32-Split-31-1: Split the 32-bits bus into two buses of 31 and 1 wires');
gettext('SL1');
gettext('Bus32-Split-1-31: Split the 32-bits bus into two buses of 1 and 31 wires');
gettext('Sign-int12');
gettext('Sign-int12: Get the sign of a 12-bits Intenger');
gettext('Bus12-Split-1-11: Split the 12-bits bus into two buses of 1 and 11 wires');
gettext('Sign-int16');
gettext('Sign-int16: Get the sign of a 16-bits Intenger');
gettext('Sign-int2');
gettext('Sign-int20');
gettext('Sign-int20: Get the sign of a 20-bits Intenger');
gettext('Bus20-Split-1-19: Split the 20-bits bus into two buses of 1 and 19 wires');
gettext('Sign-int3');
gettext('Sign-int3: Get the sign of a 3-bits Intenger');
gettext('Sign-int32');
gettext('Sign-int32: Get the sign of a 32-bits Intenger');
gettext('Sign-int4');
gettext('Sign-int4: Get the sign of a 4-bits Intenger');
gettext('Bus4-Split-1-3: Split the 4-bits bus into two: 1-bit and 3-bits buses');
gettext('Sign-int5');
gettext('Sign-int5: Get the sign of a 5-bits Intenger');
gettext('Sign-int6');
gettext('Sign-int6: Get the sign of a 6-bits Intenger');
gettext('Bus6-Split-1-5: Split the 6-bits bus into two buses of 1 and 5 wires');
gettext('Sign-int7');
gettext('Sign-int7: Get the sign of a 7-bits Intenger');
gettext('Bus7-Split-1-6: Split the 7-bits bus into two buses of 1 and 6 wires');
gettext('Sign-int8');
gettext('Sign-int8: Get the sign of a 8-bits Intenger');
gettext('Bus8-Split-half: Split the 8-bits bus into two buses of 1 and 7 wires');
gettext('Bus-02');
gettext('Bus-03');
gettext('Bus-04');
gettext('Bus-05');
gettext('Bus-06');
gettext('Bus-07');
gettext('Bus-08');
gettext('Bus-09');
gettext('Bus-10');
gettext('Bus-11');
gettext('Bus-12');
gettext('Bus-15');
gettext('Bus-16');
gettext('Bus-17');
gettext('Bus-19');
gettext('Bus-20');
gettext('Bus-22');
gettext('Bus-23');
gettext('Bus-24');
gettext('Bus-27');
gettext('Bus-28');
gettext('Bus-31');
gettext('Bus-32');
gettext('Bus-64');
gettext('Split-all');
gettext('Split-1-2');
gettext('Split-2-1');
gettext('Split-all');
gettext('Split-1-3');
gettext('Split-3-1');
gettext('Split-all');
gettext('Split-half');
gettext('Bus4-Split-half: Split the 4-bits bus into two of the same size');
gettext('Split-1-4');
gettext('Split-2-3');
gettext('Bus5-Split-2-3: Split the 5-bits bus into two buses of 2 and 3 bits');
gettext('Split-3-2');
gettext('Bus5-Split-3-2: Split the 5-bits bus into two buses of 3 and 2 bits');
gettext('Split-4-1');
gettext('Bus5-Split-4-1: Split the 5-bits bus into two buses of 4 and 1 bits');
gettext('Split-all');
gettext('Bus5-Split-all: Split the 5-bits bus into its wires');
gettext('Split-1-5');
gettext('Split-2-4');
gettext('Bus6-Split-2-4: Split the 6-bits bus into two buses of 2 and 4 wires');
gettext('Split-4-2');
gettext('Bus6-Split-4-2: Split the 6-bits bus into two buses of 4 and 2 wires');
gettext('Split-5-1');
gettext('Bus6-Split-5-1: Split the 6-bits bus into two buses of 5 and 1 wires');
gettext('Split-all');
gettext('Bus6-Split-all: Split the 6-bits bus into its wires');
gettext('Split-half');
gettext('Bus6-Split-half: Split the 6-bits bus into two buses of 3 wires');
gettext('Split-1-6');
gettext('Split-2-5');
gettext('Bus7-Split-2-5: Split the 7-bits bus into two buses of 2 and 5 wires');
gettext('Split-3-4');
gettext('Bus7-Split-3-4: Split the 7-bits bus into two buses of 3 and 4 wires');
gettext('Split-4-3');
gettext('Bus7-Split-4-3: Split the 7-bits bus into two buses of 4 and 3 wires');
gettext('Split-5-2');
gettext('Bus7-Split-5-2: Split the 7-bits bus into two buses of 5 and 2 wires');
gettext('Split-6-1');
gettext('Bus7-Split-6-1: Split the 7-bits bus into two buses of 6 and 1 wires');
gettext('Split-all');
gettext('Bus7-Split-all: Split the 7-bits bus into its wires');
gettext('Split-1-7');
gettext('Split-2-6');
gettext('Split-3-5');
gettext('Bus8-Split-3-5: Split the 8-bits bus into two buses of 3 and 5 wires');
gettext('Split-5-3');
gettext('Bus8-Split-5-3: Split the 8-bits bus into two buses of 5 and 3 wires');
gettext('Split-6-2');
gettext('Bus8-Split-6-2: Split the 8-bits bus into two buses of 6 and 2 wires');
gettext('Split-7-1');
gettext('Split-all');
gettext('Bus8-Split-all: Split the 8-bits bus into its wires');
gettext('Split-half');
gettext('Bus8-Split-half: Split the 8-bits bus into two buses of the same size');
gettext('Split-quarter');
gettext('Bus8-Split-quarter: Split the 8-bits bus into four buses of the same size');
gettext('Split-1-8');
gettext('Split-2-8');
gettext('Bus10-Split-2-8: Split the 10-bits bus into two buses of 2 and 8 wires');
gettext('Split-3-8');
gettext('Bus11-Split-3-8: Split the 11-bits bus into two buses of 3 and 8 wires');
gettext('Split-1-11');
gettext('Split-4-8');
gettext('Bus12-Split-4-8: Split the 12-bits bus into two buses of 4 and 8 wires');
gettext('Split-one-third');
gettext('Bus12-Split-one-third: Split the 12-bits bus into three buses of equal size');
gettext('Split-5-10');
gettext('Bus15-Split-7-8: Split the 15-bits bus into two buses of 7 and 8 bits');
gettext('Split-7-8');
gettext('Split-1-15');
gettext('Split-15-1');
gettext('Split-half');
gettext('Bus16-Split-half: Split the 16-bits bus into two buses of the same size');
gettext('Split-quarter');
gettext('Bus16-Split-quarter: Split the 16-bits bus into four buses of the same size');
gettext('Split-1-16');
gettext('Bus20-Split-4-16: Split the 20-bits bus into two buses of 4 and 16 wires');
gettext('Split-3-8-8');
gettext('Bus19-Split-3-8-8: Split the 19-bits bus into three buses of 3, 8 and 8 wires');
gettext('Split-1-19');
gettext('Split-12-8');
gettext('Bus20-Split-8-12: Split the 20-bits bus into two buses of 8 and 12 wires');
gettext('Split-4-16');
gettext('Split-4-8-8');
gettext('Bus20-Split-4-8-8: Split the 20-bits bus into three buses of 4, 8 and 8 wires');
gettext('Split-16-6');
gettext('Bus22-Split-16-6: Split the 22-bits bus into two buses of 16 and 6 wires');
gettext('Split-7-8-8');
gettext('Bus19-Split-3-8-8: Split the 19-bits bus into three buses of 3,8 and 8 bits');
gettext('Split-16-8');
gettext('Bus24-Split-16-8: Split the 24-bits bus into two buses of 16 and 8 wires');
gettext('Split-8-16');
gettext('Bus24-Split-8-16: Split the 24-bits bus into two buses of 8 and 16 wires');
gettext('Split-one-third');
gettext('Bus24-Split-one-third: Split the 24-bits bus into three buses of  the same size');
gettext('Split-3-8-8-8');
gettext('Bus27-Split-3-8-8-8: Split the 27-bits bus into four buses of 7,8, 8 and 8 bits');
gettext('Split-20-8');
gettext('Bus28-Split-20-8: Split the 28-bits bus into two buses of 20 and 8 wires');
gettext('Split-4-24');
gettext('Bus28-Split-4-24: Split the 28-bits bus into two buses of 4 and 24 wires');
gettext('Split-4-8-8-8');
gettext('Bus28-Split-4-8-8-8: Split the 28-bits bus into four buses of 4, 8, 8, and 8 wires');
gettext('Split-7-8-8-8');
gettext('Bus31-Split-7-8-8-8: Split the 31-bits bus into four buses of 7,8, 8 and 8 bits');
gettext('Split-1-31');
gettext('Split-17-15');
gettext('Bus32-Split-17-15: Split the 32-bits bus into two buses of 17 and 15 wires');
gettext('Split-22-10');
gettext('Bus32-Split-22-10: Split the 32-bits bus into two buses of 22 and 10 wires');
gettext('Split-24-8');
gettext('Bus32-Split-8-24: Split the 28-bits bus into two buses of 8 and 24 wires');
gettext('Split-29-3');
gettext('Bus32-Split-29-3: Split the 29-bits bus into two buses of 29 and 3 wires');
gettext('Split-31-1');
gettext('Split-8-24');
gettext('Split-half');
gettext('Bus32-Split-half: Split the 32-bits bus into two buses of 16 wires');
gettext('Split-quarter');
gettext('Bus32-Split-quarter: Split the 32-bits bus into four buses of 8 wires');
gettext('Split-half');
gettext('Bus64-Split-half: Split the 64-bits bus into two buses of 32 wires');
gettext('Uint12');
gettext('Uint16');
gettext('Uint2');
gettext('Uint32');
gettext('Uint4');
gettext('Uint8');
gettext('Uint12-08-bits');
gettext('UINT12-8bits:  Extend a 8-bits unsigned integer to 12-bits ');
gettext('4bits constant value: 0');
gettext('Generic: 4-bits generic constant (0-15)');
gettext('Uint16-08-bits');
gettext('UINT16-9bits:  Extend a 9-bits unsigned integer to 16-bits ');
gettext('8bits constant value: 0');
gettext('Generic: 8-bits generic constant (0-255)');
gettext('Uint16-09-bits');
gettext('7bits constant value: 0');
gettext('Generic: 7-bits generic constant (0-127)');
gettext('Uint16-10-bits');
gettext('UINT16-10bits:  Extend a 10-bits unsigned integer to 16-bits ');
gettext('6bits constant value: 0');
gettext('Generic: 6-bits generic constant (0-63)');
gettext('Uint16-11-bits');
gettext('UINT16-11bits:  Extend a 11-bits unsigned integer to 16-bits ');
gettext('5bits constant value: 0');
gettext('Generic: 5-bits generic constant (0-31)');
gettext('Uint16-12-bits');
gettext('UINT16-12bits:  Extend a 12-bits unsigned integer to 16-bits ');
gettext('Uint16-13-bits');
gettext('UINT16-13bits:  Extend a 13-bits unsigned integer to 16-bits ');
gettext('3bits constant value: 0');
gettext('Generic: 3-bits generic constant (0-7)');
gettext('Uint16-14-bits');
gettext('UINT16-14bits:  Extend a 14-bits unsigned integer to 16-bits ');
gettext('2bits constant value: 0');
gettext('Generic: 2-bits generic constant (0,1,2,3)');
gettext('Uint16-15-bits');
gettext('UINT16-15bits:  Extend a 12-bits unsigned integer to 16-bits ');
gettext('Uint2-01-bit');
gettext('UINT2-1bit:  Extend a 1-bit unsigned integer to 2-bits ');
gettext('Uint32-16-bits');
gettext('UINT32-16bits:  Extend a 16-bits unsigned integer to 32-bits ');
gettext('16bits constant value: 0');
gettext('Generic: 16-bits generic constant');
gettext('Uint32-17-bits');
gettext('UINT32-17bits:  Extend a 17-bits unsigned integer to 32-bits ');
gettext('15bits constant value: 0');
gettext('Generic: 15-bits generic constant');
gettext('Uint32-18-bits');
gettext('UINT32-18bits:  Extend a 18-bits unsigned integer to 32-bits ');
gettext('14bits constant value: 0');
gettext('Generic: 14-bits generic constant');
gettext('Uint32-19-bits');
gettext('UINT32-19bits:  Extend a 19-bits unsigned integer to 32-bits ');
gettext('13bits constant value: 0');
gettext('Generic: 13-bits generic constant');
gettext('Uint32-2-bits');
gettext('UINT32-8bits:  Extend a 2-bits unsigned integer to 32-bits ');
gettext('Generic: 30-bits generic constant');
gettext('Uint32-20-bits');
gettext('UINT32-20bits:  Extend a 20-bits unsigned integer to 32-bits ');
gettext('12bits constant value: 0');
gettext('Generic: 12-bits generic constant (0-4095)');
gettext('Uint32-21-bits');
gettext('UINT32-21bits:  Extend a 21-bits unsigned integer to 32-bits ');
gettext('11bits constant value: 0');
gettext('Generic: 11-bits generic constant');
gettext('Uint32-22-bits');
gettext('UINT32-22bits:  Extend a 22-bits unsigned integer to 32-bits ');
gettext('10bits constant value: 0');
gettext('Generic: 9-bits generic constant');
gettext('Uint32-23-bits');
gettext('UINT32-23bits:  Extend a 23-bits unsigned integer to 32-bits ');
gettext('9bits constant value: 0');
gettext('Uint32-24-bits');
gettext('UINT32-24bits:  Extend a 24-bits unsigned integer to 32-bits ');
gettext('Uint32-25-bits');
gettext('UINT32-25bits:  Extend a 25-bits unsigned integer to 32-bits ');
gettext('Uint32-26-bits');
gettext('UINT32-26bits:  Extend a 26-bits unsigned integer to 32-bits ');
gettext('Uint32-27-bits');
gettext('UINT32-27bits:  Extend a 27-bits unsigned integer to 32-bits ');
gettext('Uint32-28-bits');
gettext('UINT32-28bits:  Extend a 28-bits unsigned integer to 32-bits ');
gettext('Uint32-29-bits');
gettext('UINT32-29bits:  Extend a 29-bits unsigned integer to 32-bits ');
gettext('Uint32-30-bits');
gettext('UINT32-30bits:  Extend a 30-bits unsigned integer to 32-bits ');
gettext('Uint32-31-bits');
gettext('UINT32-31bits:  Extend a 31-bits unsigned integer to 32-bits ');
gettext('Uint32-8-bits');
gettext('UINT32-8bits:  Extend a 8-bits unsigned integer to 32-bits ');
gettext('Uint4-01-bit');
gettext('UINT4-1bit:  Extend a 1-bit unsigned integer to 4-bits ');
gettext('Uint4-02-bit');
gettext('UINT4-2bit:  Extend a 2-bit unsigned integer to 4-bits ');
gettext('Uint4-03-bit');
gettext('UINT4-3bit:  Extend a 3-bit unsigned integer to 4-bits ');
gettext('Uint8-01-bit');
gettext('UINT8-1bit:  Extend a 1-bit unsigned integer to 8-bits ');
gettext('Uint8-02-bits');
gettext('UINT8-2bits:  Extend a 2-bits unsigned integer to 8-bits ');
gettext('Uint8-03-bits');
gettext('UINT8-3bits:  Extend a 3-bits unsigned integer to 8-bits ');
gettext('Uint8-04-bits');
gettext('UINT8-4bits:  Extend a 4-bits unsigned integer to 8-bits ');
gettext('Uint8-05-bits');
gettext('UINT8-5bits:  Extend a 5-bits unsigned integer to 8-bits ');
gettext('Uint8-06-bits');
gettext('UINT8-6bits:  Extend a 6-bits unsigned integer to 8-bits ');
gettext('Uint8-07-bits');
gettext('UINT8-7bits:  Extend a 7-bits unsigned integer to 8-bits ');
gettext('Bus-2');
gettext('Bus2: Two bits plain Bus');
gettext('Bus-3');
gettext('Bus3: Three bits plain Bus');
gettext('Bus-4');
gettext('Bus4: Four bits plain Bus');
gettext('Bus-5');
gettext('Bus5: Five bits plain Bus');
gettext('Bus-6');
gettext('Bus6: Six bits plain Bus');
gettext('Bus-7');
gettext('Bus7: Seven bits plain Bus');
gettext('Bus-8');
gettext('Bus8: Eight bits plain Bus');
gettext('Wire');
gettext('Wire: Just a simple wire');
gettext('03-Split');
gettext('04-Join');
gettext('05-Wires');
gettext('06-Copy');
gettext('07-Sign');
gettext('08-Uint');
gettext('09-Reversal');
gettext('10-Shift');
gettext('TESTs');
gettext('00-Index');
gettext('# INDEX: IceWire Collection');
gettext('## Wires');
gettext('Bus2');
gettext('## Join');
gettext('## Split');
gettext('Bus2-Join-all');
gettext('Bus2-Split-all');
gettext('## Copy');
gettext('Copy-2');
gettext('## UINT8');
gettext('## Reversal');
gettext('## Shift-left');
gettext('## Shift-right');
gettext('## Sign');
gettext('## UINT2');
gettext('## UINT4');
gettext('## 1-Bit');
gettext('## 2-Bits');
gettext('## 3-Bits');
gettext('## 4-Bits');
gettext('### NO EXIST');
gettext('Auxiliary cables');
gettext('## Description');
gettext('Build bigger buses by Join smaller buses');
gettext('Get sub-buses or wires from a bigger bus');
gettext('Create a Bus of N bits  \nby copying N times  \nthe input');
gettext('Get the sign bit of an  \nelement of N bits  \n(The sign bit is the MSB)');
gettext('Shift to the right the input data  \n* Uint data: The sign bit is set to 0\n* Int data: The sign bit is kept');
gettext('Shift to the left the input data\n* Uint data: The sign bit is set to 0\n* Int data: The sign bit is kept');
gettext('Reverse the position of the  \nwires in the bus. Ex: The 4-input bus  \nb3,b2,b1,b0 is changed to b0,b1,b2,b3');
gettext('Extend to the input bus to a N-bits bus, by adding 0s as  \nmost significant bits.  Ex: The 2-bits bus b1,b0 is extended  \nas a 4-bits bus:  0,0,b1,b0');
gettext('01-Index');
gettext('Bus8-Join-half');
gettext('Bus8-Join-all');
gettext('Bus8-Split-half');
gettext('Bus7-all');
gettext('Bus-Split-all');
gettext('Copy-8');
gettext('## 5-Bits');
gettext('## 6-Bits');
gettext('## 7-Bits');
gettext('## 8-Bits');
gettext('Bus8-Split-quarter');
gettext('02-Index');
gettext('Bus27-Split-3-8-8-8: Split the 27-bits bus into four buses of 3,8,8 and 8 wires');
gettext('## Join Menu');
gettext('## Split Menu');
gettext('## 9-Bits');
gettext('## 10-Bits');
gettext('## 11-Bits');
gettext('## 12-Bits');
gettext('## 15-Bits');
gettext('## 16-Bits');
gettext('## 20-Bits');
gettext('## 23-Bits');
gettext('## 24-Bits');
gettext('## 27-Bits');
gettext('## 28-Bits');
gettext('## 31-Bits');
gettext('## 32-Bits');
gettext('## UINT16');
gettext('## 22-Bits');
gettext('## 17-Bits');
gettext('## 29-Bits');
gettext('## 64-Bits');
gettext('Alhambra-II');
gettext('01-Bus2-Split-all');
gettext('# Example: Using the Bus2-Split-all block\n\nThe buttons SW2 and SW1 are read in a 2-bits bus. This bus is split into its two bits and  \nshown on two independent LEDs');
gettext('Bus-2 Split-all');
gettext('2 bits Input BUS');
gettext('MSB bit');
gettext('LSB bit');
gettext('02-Split-1-4');
gettext('# Example: Using the Split-1-4 block\n\nThe 5-bits constant is split into its Most Significant bit and the 4 Less Significant bits.  \nBoth sub-buses are shown on the LED7 and LEDs 0,1,2 and 3 respectivelly');
gettext('5 bits Input BUS');
gettext('LSB bits');
gettext('5-bits constant');
gettext('Alhambra-II');
gettext('01-Bus2-Join-all');
gettext('# Example: Using the Bus2-Join-all block\n\nThe state of buttons SW1 and SW2 are inserted into a 2-bits bus and then shown on LEDs 0 and 7');
gettext('Bus-2 Join-all');
gettext('2 bits Output BUS');
gettext('02-Join-1-4');
gettext('# Example: Using the Join-1-4 block\n\nA generic 4-bits constant and the SW1 button are joined together into a 5-bits BUS and it is shown  \non 5 LEDs');
gettext('4 bits Input BUS');
gettext('4-bits constant');
gettext('Alhambra-II');
gettext('01-Bus-2-button-leds');
gettext('# Example: Bus-2: Connection of two buses');
gettext('2-bits input bus');
gettext('2-bits Bus block');
gettext('2-bits output bus');
gettext('**NOTE**: This is just an example of use of the Bus-2 block. But the connection  \nbetween the two buttons and the LEDs can be done directly, without using  \nthe 2-Bus block');
gettext('Alhambra-II');
gettext('01-button-LEDs');
gettext('# Example: Turning on 8 LEDs with one button\n\nWhen the button SW1 is pressed, the 8 LEDs are turned on');
gettext('Copy-8 Block');
gettext('Alhambra-II');
gettext('01-sign-LED');
gettext('# Example: Displaying the sign bit on a LED\n\nThe Sign of a number is shown on an LED');
gettext('Sign-int8 Block');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('Configurable buttons (pull-up on/off. Not on/off) with tic output');
gettext('Button-tic: Configurable button that emits a tic when it is pressed');
gettext('Rising-edge detector. It generates a 1-period pulse (tic) when a rising edge is detected on the input');
gettext('D Flip-flop (verilog implementation)');
gettext('NOT gate (Verilog implementation)');
gettext('Two bits input And gate');
gettext('Configurable button (pull-up on/off. Not on/off)');
gettext('FPGA internal pull-up configuration on the input port');
gettext('Remove the rebound on a mechanical switch');
gettext('1bit register (implemented in verilog)');
gettext('16-bits Syscounter with reset');
gettext('DFF-rst-x16: 16 D flip-flops in paralell with reset');
gettext('DFF-rst-x04: Three D flip-flops in paralell with reset');
gettext('DFF-rst-x01: D Flip flop with reset input. When rst=1, the DFF is 0');
gettext('Inc1-16bit: Increment a 16-bits number by one');
gettext('AdderK-16bit: Adder of 16-bit operand and 16-bit constant');
gettext('Adder-16bits: Adder of two operands of 16 bits');
gettext('Adder-8bits: Adder of two operands of 8 bits');
gettext('Adder-4bits: Adder of two operands of 4 bits');
gettext('Adder-1bit: Adder of two operands of 1 bit');
gettext('AdderC-1bit: Adder of two operands of 1 bit plus the carry in');
gettext('XOR gate: two bits input xor gate');
gettext('OR2: Two bits input OR gate');
gettext('AdderC-4bits: Adder of two operands of 4 bits and Carry in');
gettext('AdderC-8bits: Adder of two operands of 8 bits and Carry in');
gettext('Edges detector. It generates a 1-period pulse (tic) when either a rising edge or a falling edge is detected on the input');
gettext('Sync 1-bit input with the system clock domain');
gettext('Select positive or negative logic for the input (0=positive, 1=negative)');
gettext('1-bit generic constant (0/1)');
gettext('# Example: Displaying the two buttons on the LEDs\n');
gettext('System clock');
gettext('Button state signal');
gettext('Tic: button pressed');
gettext('Rising edge detector');
gettext('Pull up on/off');
gettext('Not on/off');
gettext('## Rising edge detector\n\nIt generates a 1-period pulse (tic) when a rising edge is detected on the  \ninput signal');
gettext('Input signal');
gettext('Current signal  \nstate');
gettext('Signal state in the previous  \nclock cycle');
gettext('If the current signal is 1 and its value in  \nthe previous clock cycle was 0, it means  \nthat a rising edge has been detected!  \nThe output es 1\n\nIn any other case the output is 0');
gettext('**Delay**: 0 clock cycles \n\nThere is no delay between the arrival of a rising edge  \nand its detection');
gettext('Parameter: Initial value');
gettext('Input data');
gettext('Output');
gettext('# D Flip-Flop  \n\nIt stores the input data that arrives at cycle n  \nIts output is shown in the cycle n+1');
gettext('Input');
gettext('Internal pull-up  \n* 0: OFF\n* 1: ON');
gettext('Synchronization stage');
gettext('Normalization stage\n\n* 0: Wire\n* 1: signal inverted');
gettext('Debouncing stage');
gettext('### Pull-up parameter:\n\n0: No pull-up  \n1: Pull-up activated');
gettext('Only an FPGA pin can  \nbe connected here!!!');
gettext('The pull-up is connected  \nby default');
gettext('Edge detector');
gettext('Whenever there is a change in  \nthe input, the counter is started');
gettext('If the counter reaches it maximum  \nvalue, the input is considered stable  \nand it is captured');
gettext('### Time calculation\n\nFor CLK=12MHZ, a 16-bit counter reaches its  \nmaximum every 2 ** 16 * 1/F = 5.5ms aprox  \nIF more time is needed for debouncing,  \nuse a counter with more bits (17, 18...)');
gettext('## Debouncer  \n\nA value is considered stable when  \nthere is no changes during 5.5ms  \naprox. When a value is stable it is  \ncaptured on the output flip-flop');
gettext('Stable output');
gettext('Counter');
gettext('Initial value');
gettext('Reset input: Active high  \nWhen rst = 1, the DFF is reset to 0');
gettext('Data input');
gettext('Initial default  \nvalue: 0');
gettext('## Edges detector\n\nIt generates a 1-period pulse (tic) when an edge (Rising or falling) is detected on the  \ninput signal');
gettext('The output is 1 if the current value is 1 and the  \nprevious 0, or if the current value is 0 and the  \nprevious 1\n');
gettext('In any other case the output is 0');
gettext('When k=0, it works like a wire  \n(The output is equal to the input)  \nWhen k=1, it act as a not gate\n(The output is the inverse of the input)');
gettext('### Truth table for XOR\n\n| k | input | output | function |\n|---|-------|--------|----------|\n| 0 | 0     |  0     | wire     |\n| 0 | 1     |  1     | wire     |\n| 1 | 0     |  1     | Not      |\n| 1 | 1     |  0     | Not      |');
gettext('Alhambra-II');
gettext('01-Reversal-4-bits');
gettext('Reversal-4');
gettext('Alhambra-II');
gettext('01-Shift-right-1-bus4');
gettext('Bus-4-shift-right-1');
gettext('## Bus-4 Shift right example\n\nShift a 4-bits number 1 bit to the right.  \nThe result is shown on the LEDs');
gettext('Number to shift 1 bit  \nto the right');
gettext('Insert 0 as the  \nMSB ');
gettext('Display the shifted  \nnumber on the LEDs');
gettext('Copy');
gettext('Join');
gettext('Reversal');
gettext('Shift');
gettext('Sign');
gettext('Split');
gettext('Uint');
gettext('Wires');
gettext('Copy-02');
gettext('Copy-03');
gettext('Copy-04');
gettext('Copy-05');
gettext('Copy-06');
gettext('Copy-07');
gettext('Copy-08');
gettext('Copy-09');
gettext('Copy-10');
gettext('Copy-11');
gettext('Copy-12');
gettext('Copy-20');
gettext('Copy-24');
gettext('Copy-28');
gettext('Copy-32');
gettext('Alhambra-II');
gettext('01-manual-btn-leds');
gettext('# Copy-2: Manual testing with one pushbutton and two LEDs\n\nWhen the button is pressed, the Two LEDs are turned on');
gettext('Alhambra-II');
gettext('01-manual-btn-leds');
gettext('# Copy-3: Manual testing with one pushbutton and LEDs\n\nWhen the button is pressed, the LEDs are turned on');
gettext('Alhambra-II');
gettext('01-manual-btn-leds');
gettext('# Copy-4: Manual testing with one pushbutton and LEDs\n\nWhen the button is pressed, the LEDs are turned on');
gettext('Alhambra-II');
gettext('01-manual-btn-leds');
gettext('# Copy-5: Manual testing with one pushbutton and LEDs\n\nWhen the button is pressed, the LEDs are turned on');
gettext('Alhambra-II');
gettext('01-manual-btn-leds');
gettext('# Copy-6: Manual testing with one pushbutton and LEDs\n\nWhen the button is pressed, the LEDs are turned on');
gettext('Alhambra-II');
gettext('01-manual-btn-leds');
gettext('# Copy-7: Manual testing with one pushbutton and LEDs\n\nWhen the button is pressed, the LEDs are turned on');
gettext('Alhambra-II');
gettext('01-manual-btn-leds');
gettext('# Copy-8: Manual testing with one pushbutton and LEDs\n\nWhen the button is pressed, the LEDs are turned on');
gettext('Alhambra-II');
gettext('01-manual-btn-leds');
gettext('Display16-8: Display a 16-bits value on an  8-LEDs. The sel input selects the byte to display ');
gettext('System TFF with toggle input: It toogles on every system cycle if the input is active');
gettext('Reg: 1-Bit register');
gettext('2-to-1 Multplexer (1-bit channels). Fippled version');
gettext('2-to-1 Multplexer (1-bit channels)');
gettext('2-to-1 Multplexer (8-bit channels)');
gettext('2-to-1 Multplexer (4-bit channels)');
gettext('# Copy-9: Manual testing with one pushbutton and LEDs\n\nWhen the button is pressed, the LEDs are turned on');
gettext('Byte 0  \n(least significant)  ');
gettext('Mux 2-1');
gettext('D Flip-flip\n(System)');
gettext('Channel B');
gettext('Channel A');
gettext('Alhambra-II');
gettext('01-manual-btn-leds');
gettext('# Copy-10: Manual testing with one pushbutton and LEDs\n\nWhen the button is pressed, the LEDs are turned on');
gettext('Alhambra-II');
gettext('01-manual-btn-leds');
gettext('# Copy-11: Manual testing with one pushbutton and LEDs\n\nWhen the button is pressed, the LEDs are turned on');
gettext('Alhambra-II');
gettext('01-manual-btn-leds');
gettext('# Copy-12: Manual testing with one pushbutton and LEDs\n\nWhen the button is pressed, the LEDs are turned on');
gettext('Alhambra-II');
gettext('01-manual-btn-leds');
gettext('Display32-8: Display a 32-bits value on an  8-LEDs. The sel input selects the byte to display ');
gettext('4-to-1 Multplexer (8-bit channels)');
gettext('Counter-x02: 2-bits counter');
gettext('Generic component with clk input');
gettext('Inc1-2bit: Increment a 2-bits number by one');
gettext('AdderK-2bit: Adder of 2-bit operand and 2-bit constant');
gettext('Adder-2bits: Adder of two operands of 2 bits');
gettext('OR-BUS2: OR gate with 2-bits bus input');
gettext('# Copy-20: Manual testing with one pushbutton and LEDs\n\nWhen the button is pressed, the LEDs are turned on');
gettext('Alhambra-II');
gettext('01-manual-btn-leds');
gettext('# Copy-24: Manual testing with one pushbutton and LEDs\n\nWhen the button is pressed, the LEDs are turned on');
gettext('Alhambra-II');
gettext('01-manual-btn-leds');
gettext('# Copy-28: Manual testing with one pushbutton and LEDs\n\nWhen the button is pressed, the LEDs are turned on');
gettext('Alhambra-II');
gettext('01-manual-btn-leds');
gettext('# Copy-32: Manual testing with one pushbutton and LEDs\n\nWhen the button is pressed, the LEDs are turned on');
gettext('Bus-02');
gettext('Bus-03');
gettext('Bus-04');
gettext('Bus-05');
gettext('Bus-06');
gettext('Bus-07');
gettext('Bus-08');
gettext('Bus-09');
gettext('Bus-10');
gettext('Bus-11');
gettext('Bus-12');
gettext('Bus-15');
gettext('Bus-16');
gettext('Bus-19');
gettext('Bus-20');
gettext('Bus-22');
gettext('Bus-23');
gettext('Bus-24');
gettext('Bus-27');
gettext('Bus-28');
gettext('Bus-31');
gettext('Bus-32');
gettext('Join-all');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus2-Join-all: Manual testing with two pushbuttons and an two LEDs\n\nThe buttons SW1 and SW2 are connected to the LEDs 0 and 1 respectivelly  \nWhen the buttons are pressed, the corresponding LED is turn on');
gettext('Join-1-2');
gettext('Join-2-1');
gettext('Join-all');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('Constant bit 1');
gettext('# Bus3-Join-1-2: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus3-Join-2-1: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus3-Join-all: Manual testing with two pushbuttons and two LEDs\n\nThe buttons SW1 and SW2 are connected to the LEDs 0 and 1 respectivelly  \nWhen the buttons are pressed, the corresponding LED is turned on  \nThe LED2 is on');
gettext('Join-1-3');
gettext('Join-3-1');
gettext('Join-all');
gettext('Join-half');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('2bits constant value: 3');
gettext('# Bus4-Join-1-3: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus4-Join-3-1: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus4-Join-all: Manual testing with two pushbuttons and two LEDs\n\nThe buttons SW1 and SW2 are connected to the LEDs 0 and 1 respectivelly  \nWhen the buttons are pressed, the corresponding LED is turned on  \nThe LED2 and LED3 are on');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus4-Join-half: Manual testing\n\n');
gettext('Join-1-4');
gettext('Join-2-3');
gettext('Join-3-2');
gettext('Join-4-1');
gettext('Join-all');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus5-Join-1-4: Manual testing with two pushbuttons and two LEDs\n\nThe buttons SW1 and SW2 are connected to the LEDs 4 and 0 respectivelly  \nWhen the buttons are pressed, the corresponding LED is turned on  \nThe LED2 and LED3 are on');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus5-Join-2-3: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus5-Join-3-2: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('3bits constant value: 7');
gettext('# Bus5-Join-4-1: Manual testing\n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus5-Join-all: Manual testing with two pushbuttons and two LEDs\n\nThe buttons SW1 and SW2 are connected to the LEDs 0 and 1 respectivelly  \nWhen the buttons are pressed, the corresponding LED is turned on  \nThe LED2 and LED3 are on');
gettext('Join-1-5');
gettext('Join-4-2');
gettext('Join-5-1');
gettext('Join-half');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus6-Join-1-5: Manual testing with two pushbuttons and two LEDs\n\nThe buttons SW1 and SW2 are connected to the LEDs 5 and 0 respectivelly  \nWhen the buttons are pressed, the corresponding LED is turned on  \nThe LED2 and LED3 are on');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus6-Join-4-2: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('4bits constant value: 15 (0xF in hexadecimal)');
gettext('# Bus6-Join-5-1: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus6-Join-half: Manual testing\n\n');
gettext('Join-1-6');
gettext('Join-2-5');
gettext('Join-3-4');
gettext('Join-4-3');
gettext('Join-5-2');
gettext('Join-6-1');
gettext('Join-all');
gettext('Alhambr-II');
gettext('01-manual-btns-leds');
gettext('# Bus7-Join-1-6: Manual testing with two pushbuttons and two LEDs\n\nThe buttons SW1 and SW2 are connected to the LEDs 0 and 6 respectivelly  \nWhen the buttons are pressed, the corresponding LED is turned on  \nThe LEDs 2-5 are on');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus7-Join-2-5: Manual testing \n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus7-Join-3-4: Manual testing with two pushbuttons and two LEDs\n\nThe buttons SW1 and SW2 are connected to the LEDs 0 and 6 respectivelly  \nWhen the buttons are pressed, the corresponding LED is turned on  \nThe LEDs 2-5 are on');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus7-Join-4-3: Manual testing with two pushbuttons and two LEDs\n\nThe buttons SW1 and SW2 are connected to the LEDs 0 and 6 respectivelly  \nWhen the buttons are pressed, the corresponding LED is turned on  \nThe LEDs 2-5 are on');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus7-Join-5-2: Manual testing \n');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus7-Join-6-1: Manual testing \n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus7-Join-all: Manual testing with two pushbuttons and two LEDs\n\nThe buttons SW1 and SW2 are connected to the LEDs 0 and 1 respectivelly  \nWhen the buttons are pressed, the corresponding LED is turned on  \nThe LEDs 2-6 are on');
gettext('Join-1-7');
gettext('Join-2-6');
gettext('Join-3-5');
gettext('Join-5-3');
gettext('Join-6-2');
gettext('Join-7-1');
gettext('Join-all');
gettext('Join-half');
gettext('Join-quarter');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus8-Join-1-7: Manual testing with two pushbuttons and two LEDs\n\nThe buttons SW1 and SW2 are connected to the LEDs 0 and 7 respectivelly  \nWhen the buttons are pressed, the corresponding LED is turned on  \nThe LEDs 1-6 are on');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus8-Join-2-6: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus8-Join-3-5: Manual testing with two pushbuttons and two LEDs\n\nThe buttons SW1 and SW2 are connected to the LEDs 0 and 7 respectivelly  \nWhen the buttons are pressed, the corresponding LED is turned on  \nThe LEDs 2-6 are on');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus8-Join-5-3: Manual testing with two pushbuttons and two LEDs\n\nThe buttons SW1 and SW2 are connected to the LEDs 0 and 7 respectivelly  \nWhen the buttons are pressed, the corresponding LED is turned on  \nThe LEDs 2-6 are on');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus8-Join-7-1: Manual testing with two pushbuttons and two LEDs\n\nThe buttons SW1 and SW2 are connected to the LEDs 0 and 7 respectivelly  \nWhen the buttons are pressed, the corresponding LED is turned on  \nThe LEDs 1-6 are on');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus8-Join-all: Manual testing with two pushbuttons and two LEDs\n\nThe buttons SW1 and SW2 are connected to the LEDs 0 and 1 respectivelly  \nWhen the buttons are pressed, the corresponding LED is turned on  \nThe LEDs 2-7 are on');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus8-Join-half: Manual testing with two pushbuttons and two LEDs\n\nThe buttons SW1 and SW2 are connected to the LEDs 0 and 7 respectivelly  \nWhen the buttons are pressed, the corresponding LED is turned on  \nThe LEDs 2-6 are on');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus8-Join-quarter: Manual testing with two pushbuttons and two LEDs\n\nThe buttons SW1 and SW2 are connected to the LEDs 0 and 7 respectivelly  \nWhen the buttons are pressed, the corresponding LED is turned on  \nThe LEDs 2-6 are on');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('## Bus-09-bits Join-1-8: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('# Bus10-Join-2-8: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('# Bus11-Join-3-8: Manual testing\n\n');
gettext('Join-1-11');
gettext('Join-4-8');
gettext('Join-one-fourth');
gettext('Join-one-third');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus12-Join-one-1-11: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus12-Join-4-8: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('Counter-x01: 1-bit counter');
gettext('# Bus12-Join-one-forth: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus12-Join-one-third: Manual testing\n\n');
gettext('Join-5-10');
gettext('Join-7-8');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus15-Join-5-10: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus15-Join-7-8: Manual testing\n\n');
gettext('Join-1-15');
gettext('Join-15-1');
gettext('Join-4-12');
gettext('Join-7-9');
gettext('Join-half');
gettext('Join-quarter');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus16-Join-1-15: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus16-Join-15-1: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus16-Join-4-12: Manual testing\n\n');
gettext('01-manual-btns-leds');
gettext('# Bus16-Join-7-9: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus16-Join-half: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus16-Join-quarter: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus19-Join-3-8-8: Manual testing\n\n');
gettext('Join-1-19');
gettext('Join-4-16');
gettext('Join-4-8-8');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('Generic: 19-bits generic constant');
gettext('# Bus20-Join-1-19: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus20-Join-4-16: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus20-Join-4-8-8: Manual testing\n\n');
gettext('Join-10-22');
gettext('Alhambra-II');
gettext('01-manual-testing');
gettext('Generic: 22-bits generic constant');
gettext('# Bus22-Join-10-22: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus23-Join-7-8-8: Manual testing\n\n');
gettext('Join-8-16');
gettext('Join-half');
gettext('Join-one-third');
gettext('Alhambra-II');
gettext('01-manual-testing');
gettext('# Bus24-Join-8-16: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-manual-testing');
gettext('Display24-8: Display a 24-bits value on  8-LEDs. The sel input selects the byte to display ');
gettext('Counter-M-x02: 2-bits M module counter');
gettext('Comp2-2bit: Comparator of two 2-bit numbers');
gettext('Comp2-1bit: Comparator of two 1-bit numbers');
gettext('reg-rst-2-bits:  2-bits register with reset');
gettext('1-bit-Reg-rst: 1-Bit register with reset');
gettext('# Bus24-Join-half: Manual testing\n\n');
gettext('2-bits Comparator');
gettext('Maximum count  \nreached');
gettext('2-bits register');
gettext('If the max count is reached  \nand the cnt tic is received,  \nthe register is reset to 0');
gettext('A');
gettext('B');
gettext('Alhambra-II');
gettext('01-manual-testing');
gettext('# Bus24-Join-one-third: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus27-Join-3-8-8-8: Manual testing\n\n');
gettext('Join-4-24');
gettext('Join-4-8-8-8');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('Generic: 24-bits generic constant');
gettext('# Bus28-Join-4-24: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('# Bus28-Join-4-8-8-8: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus31-Join-7-8-8-8: Manual testing\n\n');
gettext('Join-1-31');
gettext('Join-17-15');
gettext('Join-29-3');
gettext('Join-30-2');
gettext('Join-31-1');
gettext('Join-8-24');
gettext('Join-half');
gettext('Join-quarter');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('Generic: 31-bits generic constant');
gettext('# Bus32-Join-31-1: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('Generic: 17-bits generic constant');
gettext('# Bus32-Join-17-15: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('Generic: 29-bits generic constant');
gettext('# Bus32-Join-29-3: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('2bits constant value: 1');
gettext('# Bus32-Join-30-2: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('# Bus32-Join-8-24: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('# Bus32-Join-half: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('# Bus32-Join-quarter: Manual testing\n\n');
gettext('02-Bits');
gettext('03-Bits');
gettext('04-Bits');
gettext('05-Bits');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('Reversal-5: 5-bit Bus reversal');
gettext('TODO');
gettext('Bus-02');
gettext('Bus-03');
gettext('Bus-04');
gettext('Bus-08');
gettext('Bus-16');
gettext('Bus-32');
gettext('Shift-left');
gettext('Shift-right');
gettext('SL1');
gettext('SL1-int2');
gettext('SL1-uint2');
gettext('Alhambra-II');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('01-Manual-testing');
gettext('## BUS-2-Shift-Left-1: Manual testing');
gettext('SR1');
gettext('SR1-int2');
gettext('SR1-uint2');
gettext('Alhambra-II');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('01-Manual-testing');
gettext('Shift-left');
gettext('Shift-right');
gettext('SL1');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## BUS-3-Shift-Left-1: Manual testing');
gettext('SR1');
gettext('SR1-uint3');
gettext('Alhambra-II');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('01-Manual-testing');
gettext('## BUS-3-Shift-right-1: Manual testing');
gettext('Shift-left');
gettext('Shift-right');
gettext('SL1');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('SR1');
gettext('SR1-uint4');
gettext('Alhambra-II');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('01-Manual-testing');
gettext('## BUS-4-Shift-right-1: Manual testing');
gettext('Shift-left');
gettext('Shift-right');
gettext('SL1');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('SR1');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## BUS-8-Shift-right-1: Manual testing');
gettext('Shift-left');
gettext('Shift-right');
gettext('SL1');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## BUS-16-Shift-Left-1: Manual testing');
gettext('SR1');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## BUS-16-Shift-right-1: Manual testing');
gettext('Shift-left');
gettext('Shift-right');
gettext('SL1');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('Generic: 32-bits generic constant');
gettext('## BUS-32-Shift-Left-1: Manual testing');
gettext('SR1');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('Value to Shift');
gettext('Sign-02Bits');
gettext('Sign-03Bits');
gettext('Sign-04Bits');
gettext('Sign-05Bits');
gettext('Sign-06Bits');
gettext('Sign-07Bits');
gettext('Sign-08Bits');
gettext('Sign-12Bits');
gettext('Sign-16Bits');
gettext('Sign-20Bits');
gettext('Sign-32Bits');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('Sign-int2');
gettext('Alhambra-II');
gettext('Sign-int3');
gettext('Alhambra-II');
gettext('Sign-int4');
gettext('Alhambra-II');
gettext('Sign-int5');
gettext('Alhambra-II');
gettext('Sign-int6');
gettext('Alhambra-II');
gettext('Sign-int7');
gettext('Alhambra-II');
gettext('Sign-int8');
gettext('Alhambra-II');
gettext('Sign-int12');
gettext('01-sign-LED');
gettext('Alhambra-II');
gettext('01-sign-LED');
gettext('Generic: 20-bits generic constant');
gettext('Alhambra-II');
gettext('01-sign-LED');
gettext('Bus-02');
gettext('Bus-03');
gettext('Bus-04');
gettext('Bus-05');
gettext('Bus-06');
gettext('Bus-07');
gettext('Bus-08');
gettext('Bus-09');
gettext('Bus-10');
gettext('Bus-11');
gettext('Bus-12');
gettext('Bus-15');
gettext('Bus-16');
gettext('Bus-17');
gettext('Bus-19');
gettext('Bus-20');
gettext('Bus-22');
gettext('Bus-24');
gettext('Bus-27');
gettext('Bus-28');
gettext('Bus-31');
gettext('Bus-32');
gettext('Bus-64');
gettext('Split-all');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus2-Split-all: Manual testing with two pushbuttons and an two LEDs\n\nThe buttons SW1 and SW2 are connected to the LEDs 0 and 1 respectivelly  \nWhen the buttons are pressed, the corresponding LED is turn on');
gettext('Split-1-2');
gettext('Split-2-1');
gettext('Split-all');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus3-Split-1-2: Manual testing with a constant and LEDs\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus3-Split-2-1: Manual testing with a constant and LEDs\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus3-Split-all: Manual testing with a constant and LEDs\n\nThe value of the constant is shown on the LEDs');
gettext('Split-1-3');
gettext('Split-3-1');
gettext('Split-all');
gettext('Split-half');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus4-Split-1-3: Manual testing with a constant and LEDs\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus4-Split-3-1: Manual testing\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus4-Split-all: Manual testing with a constant and LEDs\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus4-Split-half: Manual testing\n\nThe value of the constant is shown on the LEDs');
gettext('Split-1-4');
gettext('Split-2-3');
gettext('Split-3-2');
gettext('Split-4-1');
gettext('Split-all');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus5-Split-1-4: Manual testing with a constant and LEDs\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus5-Split-2-3: Manual testing\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus5-Split-3-2: Manual testing\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus5-Split-4-1: Manual testing\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus5-Split-all: Manual testing with a constant and LEDs\n\nThe value of the constant is shown on the LEDs');
gettext('Split-1-5');
gettext('Split-2-4');
gettext('Split-4-2');
gettext('Split-5-1');
gettext('Split-all');
gettext('Split-half');
gettext('Alhambra-II');
gettext('01-manual-test');
gettext('# Bus6-Split-1-5: Manual testing with a constant and LEDs\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus6-Split-2-4: Manual testing with a constant and LEDs\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus6-Split-4-2: Manual testing\n');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus6-Split-5-1: Manual testing\n');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus6-Split-all: Manual testing with a constant and LEDs\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus6-Split-half: Manual testing\n');
gettext('Split-1-6');
gettext('Split-2-5');
gettext('Split-3-4');
gettext('Split-4-3');
gettext('Split-5-2');
gettext('Split-all');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus7-Split-1-6: Manual testing with a constant and LEDs\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus7-Split-2-5: Manual testing\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus7-Split-3-4: Manual testing with a constant and LEDs\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus7-Split-4-3: Manual testing with a constant and LEDs\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus7-Split-5-2: Manual testing\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus7-Split-all: Manual testing with a constant and LEDs\n\nThe value of the constant is shown on the LEDs');
gettext('Split-1-7');
gettext('Split-2-6');
gettext('Split-3-5');
gettext('Split-5-3');
gettext('Split-6-2');
gettext('Split-7-1');
gettext('Split-all');
gettext('Split-half');
gettext('Split-quarter');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus8-Split-1-7: Manual testing with a constant and LEDs\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('Bus8-Split-2-6: Split the 8-bits bus into two buses of 2 and 6 wires');
gettext('# Bus8-Split-2-6: Manual testing\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus8-Split-3-5: Manual testing\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus8-Split-5-3: Manual testing\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus8-Split-6-2: Manual testing\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus8-Split-7-1: Manual testing with a constant and LEDs\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus8-Split-all: Manual testing with a constant and LEDs\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus8-Split-half: Manual testing with a constant and LEDs\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-constant-leds');
gettext('# Bus8-Split-quarter: Manual testing with a constant and LEDs\n\nThe value of the constant is shown on the LEDs');
gettext('Split-1-8');
gettext('Split-8-1');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('## Bus-09-bits Split-1-8: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('## Bus-09-bits Join-8-1: Manual testing\n\n');
gettext('Alhambra-II');
gettext('01-manual-btns-leds');
gettext('# Bus10-Split-2-8: Manual testing\n\n');
gettext('Split-3-8');
gettext('01-manual-btns-leds');
gettext('# Bus11-Split-3-8: Manual testing\n\n');
gettext('Split-1-11');
gettext('Split-4-8');
gettext('Split-one-third');
gettext('Alhambra-II');
gettext('01-manual-testing');
gettext('# Bus12-Split-1-11: Manual testing with a constant and LEDs\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-testing');
gettext('# Bus12-Split-4-8: Manual testing with a constant and LEDs\n\nThe value of the constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-manual-testing');
gettext('# Bus12-Split-one-third: Manual testing with a constant and LEDs\n\nThe value of the constant is shown on the LEDs');
gettext('Split-5-10');
gettext('Split-7-8');
gettext('Alhambra-II');
gettext('Manual-testing');
gettext('## Bus-15: Split-5-10: Manual testing\n\n');
gettext('Alhambra-II');
gettext('Manual-testing');
gettext('## Bus-15: Split-7-8: Manual testing\n\n');
gettext('Split-1-15');
gettext('Split-15-1');
gettext('Split-half');
gettext('Split-quarter');
gettext('Alhambra-II');
gettext('Manual-testing');
gettext('## Bus-16: Split-1-11: Manual testing\n\n');
gettext('Alhambra-II');
gettext('Manual-testing');
gettext('## Bus-16: Split-15-1: Manual testing\n\n');
gettext('Alhambra-II');
gettext('Manual-testing');
gettext('## Bus-16: Split-half: Manual testing\n\n');
gettext('Alhambra-II');
gettext('Manual-testing');
gettext('## Split16-quarter: Manual testing\n\nThe value is shown in 8 LEDs. Initially only the less significant  \nbits. When the button is pressed, the Upper bits are displayed');
gettext('Split-1-16');
gettext('Alhambra-II');
gettext('Manual-testing');
gettext('## Bus17-Split-1-16: Manual testing\n\nThe 17-bit constnat is shown on the LEDs');
gettext('Split-3-8-8');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## Bus-19: Split-3-8-8: Manual testing\n\n');
gettext('Split-1-19');
gettext('Split-12-8');
gettext('Split-4-16');
gettext('Split-4-8-8');
gettext('Alhambra-II');
gettext('Manual-testing');
gettext('## Bus20-Split-1-19: Manual testing\n\nThe 20-bits constants is displayed on the 8 LEDs. ');
gettext('Values for testing:  \n0-FFFFF');
gettext('Alhambra-II');
gettext('Manual-testing');
gettext('## Bus20-Split-12-8: Manual testing\n\nThe 20-bits constants is displayed on the 8 LEDs. When the sw1 button  \nis pressed the 4 Most significant bits are displayed. The button sw2 switches  \nbetween the 8 less significant bits and the 8 bits in the middle');
gettext('Alhambra-II');
gettext('Manual-testing');
gettext('## Bus20-Split-4-16: Manual testing\n\nThe 20-bits constants is displayed on the 8 LEDs. When the sw1 button  \nis pressed the 4 Most significant bits are displayed. The button sw2 switches  \nbetween the 8 less significant bits and the 8 bits in the middle');
gettext('Alhambra-II');
gettext('Manual-testing');
gettext('## Bus20-Split-4-8-8: Manual testing\n\nThe 20-bits constants is displayed on the 8 LEDs');
gettext('Split-16-6');
gettext('Alhambra-II');
gettext('Manual-testing');
gettext('## BUS22-split-16-6: Manual testing\n\nThe 22-bits constants is displayed on the 8 LEDs');
gettext('Split-16-8');
gettext('Split-8-16');
gettext('Split-one-third');
gettext('Alhambra-II');
gettext('Manual-testing');
gettext('## BUS24-split-16-8: Manual testing\n\nThe 24-bits constants is displayed on the 8 LEDs. When the sw1 button  \nis pressed the 8 Most significant bits are displayed. The button sw2 switches  \nbetween the 8 less significant bits and the 8 bits in the middle');
gettext('Values for testing:  \n0-FFFFFF');
gettext('Alhambra-II');
gettext('Manual-testing');
gettext('## BUS24-split-8-16: Manual testing\n\nThe 24-bits constants is displayed on the 8 LEDs. When the sw1 button  \nis pressed the 8 Most significant bits are displayed. The button sw2 switches  \nbetween the 8 less significant bits and the 8 bits in the middle');
gettext('Alhambra-II');
gettext('Manual-testing');
gettext('## Bus 24 Split one third: Manual testing\n\nThe 24-bits constant is displayed on the 8 LEDs. The sw1 is used for  \ndisplaying the lower, middle and higer segments of the constant on the LEDs');
gettext('Split-3-8-8-8');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('Generic: 27-bits generic constant');
gettext('## Bus-27-Split-3-8-8-8: Manual testing\n\n');
gettext('Split-20-8');
gettext('Split-4-24');
gettext('Split-4-8-8-8');
gettext('Alhambra-II');
gettext('Manual-testing');
gettext('Generic: 28-bits generic constant');
gettext('## Bus 28 Split-20-8: Manual testing\n\nThe 28-bits constants is displayed on the 8 LEDs. When the sw1 button  \nis pressed the 8 Most significant bits are displayed. The button sw2 switches  \nbetween the 8 less significant bits and the 8 bits in the middle');
gettext('Alhambra-II');
gettext('Manual-testing');
gettext('## Bus 28 Split-4-24: Manual testing\n\nThe 28-bits constants is displayed on the 8 LEDs. When the sw1 button  \nis pressed the 8 Most significant bits are displayed. The button sw2 switches  \nbetween the 8 less significant bits and the 8 bits in the middle');
gettext('Values for testing:  \n0-FFFFFFF');
gettext('Alhambra-II');
gettext('Manual-testing');
gettext('Split-7-8-8-8');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## Bus-31: Split-7-8-8-8: Manual testing\n\n');
gettext('Split-1-31');
gettext('Split-17-15');
gettext('Split-22-10');
gettext('Split-24-8');
gettext('Split-29-3');
gettext('Split-31-1');
gettext('Split-8-24');
gettext('Split-half');
gettext('Split-quarter');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## 32-bits Split 1-31: Manual testing\n\nThe 32-bits constants is displayed on the 8 LEDs. When the sw1 button  \nis pressed the 8 Most significant bits are displayed. The button sw2 switches  \nbetween the 8 less significant bits and the 8 bits in the middle');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## 32-bits Split 17-15: Manual testing\n\nThe 32-bits constants is displayed on the 8 LEDs');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## 32-bits Split 22-10: Manual testing\n\nThe 32-bits constants is displayed on the 8 LEDs');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## 32-bits Split 24-8: Manual testing\n\nThe 32-bits constants is displayed on the 8 LEDs. When the sw1 button  \nis pressed the 8 Most significant bits are displayed. The button sw2 switches  \nbetween the 8 less significant bits and the 8 bits in the middle');
gettext('Values for testing:  \n0-FFFFFFFF');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## 32-bits Split 29-3: Manual testing\n\nThe 32-bits constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## 32-bits Split 31-1: Manual testing\n\nThe 32-bits constant is shown on the LEDs');
gettext('Alhambra-II');
gettext('Manual-testing');
gettext('## 32-bits Split 8-24: Manual testing\n\nThe 32-bits constants is displayed on the 8 LEDs. When the sw1 button  \nis pressed the 8 Most significant bits are displayed. The button sw2 switches  \nbetween the 8 less significant bits and the 8 bits in the middle');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## 32-bits Split half: Manual testing\n\nThe 32-bits constants is displayed on the 8 LEDs');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## 32-bits Split quarter: Manual testing\n\nThe 32-bits constants is displayed on the 8 LEDs');
gettext('Split-half');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('8-to-1 Multplexer (8-bit channels)');
gettext('8-to-1 Multplexer (2-bit channels)');
gettext('8-to-1 Multplexer (1-bit channels)');
gettext('4-to-1 Multplexer (1-bit channels)');
gettext('Counter-x03: 3-bits counter');
gettext('Reg-x03: 3-bits register');
gettext('Inc1-3bit: Increment a 3-bits number by one');
gettext('AdderK-3bit: Adder of 3-bit operand and 3-bit constant');
gettext('Adder-3bits: Adder of two operands of 3 bits');
gettext('Generic: 64-bits generic constant');
gettext('## 64-bits Split half: Manual testing\n\nThe 64-bits constants is displayed on the 8 LEDs');
gettext('Uint12');
gettext('Uint16');
gettext('Uint2');
gettext('Uint32');
gettext('Uint4');
gettext('Uint8');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## Uint12-8bits: Manual testing');
gettext('08-bits');
gettext('09-bits');
gettext('12-bits');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## Uint16-8bits: Manual testing');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## Uint16-9bits: Manual testing');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## Uint16-12bits: Manual testing');
gettext('01-bit');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## Uint2-1bits: Manual testing');
gettext('02-bits');
gettext('08-bits');
gettext('16-bits');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## Uint32-2bits: Manual testing');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## Uint32-8bits: Manual testing');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('2-to-1 Multplexer (16-bit channels)');
gettext('## Uint32-16bits: Manual testing');
gettext('01-Bit');
gettext('02-Bits');
gettext('03-Bits');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## Uint4-1bit: Manual testing');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## Uint4-2bit: Manual testing');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## Uint4-3bit: Manual testing');
gettext('01-bit');
gettext('02-bits');
gettext('03-bits');
gettext('04-bits');
gettext('05-bits');
gettext('06-bits');
gettext('07-bits');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## Uint8-1bit: Manual testing');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## Uint8-2bits: Manual testing');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## Uint8-3bits: Manual testing');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## Uint8-4bits: Manual testing');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## Uint8-5bits: Manual testing');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## Uint8-6bits: Manual testing');
gettext('Alhambra-II');
gettext('01-Manual-testing');
gettext('## Uint8-7bits: Manual testing');
gettext('Bus-2');
gettext('Bus-3');
gettext('Bus-4');
gettext('Bus-5');
gettext('Bus-6');
gettext('Bus-7');
gettext('Bus-8');
gettext('Wire');
gettext('Alhambra-II');
gettext('01-manual-btn-led');
gettext('# BUS-2: Manual testing with two pushbuttons and two LEDs\n\nThe SW1 and SW2 buttons are connected to the LEDs 0 and 1 respectivelly\nWhen the buttons are is pressed the corresponding LED is turned on');
gettext('Bus\n');
gettext('Alhambra-II');
gettext('01-manual-btn-led');
gettext('# BUS-3: Manual testing with LEDs\n\nTurn on all the LEDs');
gettext('Alhambra-II');
gettext('01-manual-btn-led');
gettext('# BUS-4: Manual testing with LEDs\n\nTurn on all the LEDs');
gettext('Alhambra-II');
gettext('01-manual-btn-led');
gettext('# BUS-5: Manual testing with LEDs\n\nTurn on all the LEDs');
gettext('Alhambra-II');
gettext('01-manual-btn-led');
gettext('# BUS-6: Manual testing with LEDs\n\nTurn on all the LEDs');
gettext('Alhambra-II');
gettext('01-manual-btn-led');
gettext('# BUS-7: Manual testing with LEDs\n\nTurn on all the LEDs');
gettext('Alhambra-II');
gettext('01-manual-btn-led');
gettext('# BUS-8: Manual testing with LEDs\n\nTurn on all the LEDs');
gettext('Alhambra-II');
gettext('01-manual-btn-led');
gettext('# Wire: Manual testing with one pushbutton and one LED\n\nWhen the button is pressed the LED0 is turned on');
